<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.neo.byez.dao.item.ItemDao">
  <select id="count" resultType="Integer">
    select count(*)
    from item
  </select>

  <select id="select" parameterType="string" resultType="ItemDto">
    select *
    from item
    where num = #{num}
  </select>

  <select id="selectAll" parameterType="map" resultType="ItemDto">
    select
      i.num as num,
      i.name as name,
      i.item_type as item_type,
      i.cust_type as cust_type,
      i.price as price,
      i.disc_price as disc_price,
      i.main_img as main_img,
      i.review_cnt as review_cnt,
      i.review_rate as review_rate,
      i.like_cnt as like_cnt,
      i.col as col
    from item i
           inner join item_state s
                      on i.num = s.num
           inner join item_detail d
                      on i.num = d.num
    order by d.rel_date desc, s.sales_qty desc, i.review_cnt desc, i.like_cnt desc
      limit #{offset}, #{pageSize}
  </select>

  <select id="selectBySearchCondition" parameterType="SearchCondition" resultType="ItemDto">
    select
    i.num as num,
    i.name as name,
    i.item_type as item_type,
    i.cust_type as cust_type,
    i.price as price,
    i.disc_price as disc_price,
    i.main_img as main_img,
    i.review_cnt as review_cnt,
    i.review_rate as review_rate,
    i.like_cnt as like_cnt,
    i.col as col
    from item i
    inner join item_state s
    on i.num = s.num
    inner join item_detail d
    on i.num = d.num
    where true
    <choose>
      <when test='option=="NT"'>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
        AND i.item_type LIKE concat('%', #{typeKeyword}, '%')
      </when>
      <when test='option=="NC"'>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
        AND i.cust_type =  #{custKeyword}
      </when>
      <when test='option=="TC"'>
        AND i.item_type LIKE concat('__', #{typeKeyword}, '%')
        AND i.cust_type =  #{custKeyword}
      </when>
      <when test='option=="T"'>
        AND i.item_type LIKE concat(#{typeKeyword}, '%')
      </when>
      <when test='option=="N"'>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
      </when>
      <otherwise>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
        AND i.item_type LIKE concat('__', #{typeKeyword}, '%')
        AND i.cust_type =  #{custKeyword}
      </otherwise>
    </choose>
    order by d.rel_date desc, s.sales_qty desc, i.review_cnt desc, i.like_cnt desc
    limit #{offset}, #{pageSize}
  </select>

  <select id="countSearchResult" parameterType="SearchCondition" resultType="int">
    select
    count(*)
    from item i
    where true
    <choose>
      <when test='option=="NT"'>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
        AND i.item_type LIKE concat('%', #{typeKeyword}, '%')
      </when>
      <when test='option=="NC"'>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
        AND i.cust_type =  #{custKeyword}
      </when>
      <when test='option=="TC"'>
        AND i.item_type LIKE concat('__', #{typeKeyword}, '%')
        AND i.cust_type =  #{custKeyword}
      </when>
      <when test='option=="T"'>
        AND i.item_type LIKE concat(#{typeKeyword}, '%')
      </when>
      <when test='option=="N"'>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
      </when>
      <otherwise>
        AND i.name LIKE concat('%', #{nameKeyword}, '%')
        AND i.item_type LIKE concat('__', #{typeKeyword}, '%')
        AND i.cust_type =  #{custKeyword}
      </otherwise>
    </choose>
  </select>

  <select id="selectDiscountItem" parameterType="SearchCondition" resultType="ItemDto">
    select
      i.num as num,
      i.name as name,
      i.item_type as item_type,
      i.cust_type as cust_type,
      i.price as price,
      i.disc_price as disc_price,
      i.main_img as main_img,
      i.review_cnt as review_cnt,
      i.review_rate as review_rate,
      i.like_cnt as like_cnt,
      i.col as col
    from item i
           inner join item_state s
                      on i.num = s.num
           inner join item_detail d
                      on i.num = d.num
    where i.item_type LIKE concat('__', #{typeKeyword}, '%')
      and i.price > i.disc_price
    order by d.rel_date desc, s.sales_qty desc, i.review_cnt desc, i.like_cnt desc
      limit #{offset}, #{pageSize}
  </select>


  <select id="countDiscountItem" parameterType="SearchCondition" resultType="int">
    select
      count(*)
    from item i
    where i.item_type LIKE concat('__', #{typeKeyword}, '%')
      and i.price > i.disc_price
  </select>

  <select id="selectDetailItem" parameterType="string" resultType="ItemDetailPageDto">
    select
      i.num as num,
      i.name as name,
      d.detail_name as detail_name,
      i.cust_type as cust_type,
      i.price as price,
      i.disc_price as disc_price,
      p.disc_rate as disc_rate,
      d.detail_img as detail_img,
      d.mfg_corp as mfg_corp,
      d.mfg_name as mfg_name,
      d.mfg_date as mfg_date,
      d.model as model,
      d.origin as origin,
      d.matr as matr,
      d.caut as caut
    from item i
           inner join item_detail d
                      on i.num = d.num
           inner join item_price p
                      on i.num = p.num
    where i.num = #{num}
  </select>


  <insert id="insert" parameterType="ItemDto">
    insert into item( num, name, price, disc_price, main_img, review_cnt, like_cnt, review_rate, col, reg_date, reg_id, up_date, up_id, item_type, cust_type)
    values( #{num}, #{name}, #{price}, #{disc_price}, #{main_img}, #{review_cnt}, #{like_cnt}, #{review_rate}, #{col}, now(), 'manager', now(), 'manager', #{item_type}, #{cust_type})
  </insert>

  <update id="update" parameterType="ItemDto">
    update item
    set name = #{name}, price = #{price}, disc_price = #{disc_price}, main_img = #{main_img}, review_cnt = #{review_cnt}, like_cnt = #{like_cnt}, review_rate = #{review_rate}, col = #{col}, reg_date = now(), reg_id = 'manage', up_date = now(), up_id = 'manager', item_type = #{item_type}, cust_type = #{cust_type}
    where num = #{num};
  </update>

  <delete id="delete" parameterType="ItemDto">
    delete
    from item
    where num = #{num}
  </delete>

  <delete id="deleteAll">
    delete
    from item
  </delete>

  <select id="selectWTop8" resultType="ItemDto">
    select
      i.*, row_number() over (order by s.sales_qty desc) as rankk
    from item i, item_state s
    where i.num = s.num
      and i.item_type like concat(#{item_type}, '%')
      limit 8;
  </select>

  <select id="selectMTop8" resultType="ItemDto">
    select
      i.*, row_number() over (order by s.sales_qty desc) as rankk
    from item i, item_state s
    where i.num = s.num
      and i.item_type like concat(#{item_type}, '%')
      limit 8;
  </select>

  <select id="selectUTop8" resultType="ItemDto">
    select
      i.*, row_number() over (order by s.sales_qty desc) as rankk
    from item i, item_state s
    where i.num = s.num
      and i.item_type like concat(#{item_type}, '%')
      limit 8;
  </select>


  <select id="selectAllItemOnAdmin" parameterType="SearchCondition" resultType="AdminItemDto">
    select
      i.num as num,
      i.name as name,
      i.main_img as main_img,
      i.item_type as item_type,
      i.cust_type as cust_type,
      s.state_code as state_code,
      i.price as price,
      i.price - (i.price * p.disc_rate) as disc_price,
      p.disc_rate as disc_rate,
      d.mfg_name as mfg_name,
      date_format(d.rel_date, '%Y-%m-%d')  as rel_date,
      date_format(d.reg_date, '%Y-%m-%d')  as reg_date,
      date_format(d.up_date, '%Y-%m-%d')  as up_date
    from item i
           inner join item_price p
                      on i.num = p.num
           inner join item_state s
                      on i.num = s.num
           inner join item_detail d
                      on i.num = d.num
    order by s.sales_qty desc, i.like_cnt desc, i.review_cnt desc
      limit #{offset}, #{pageSize}
  </select>

  <select id="selectAllItemStockInfoOnAdmin" parameterType="SearchCondition" resultType="AdminItemDto">
    select
      i.num as num,
      i.name as name,
      i.main_img as main_img,
      s.stock_qty as stock_qty,
      i.price as price,
      i.price - (i.price * p.disc_rate) as disc_price,
      d.mfg_corp as mfg_corp,
      date_format(d.rel_date, '%Y-%m-%d')  as rel_date,
      date_format(d.reg_date, '%Y-%m-%d')  as reg_date,
      date_format(d.up_date, '%Y-%m-%d')  as up_date
    from item i
           inner join item_price p
                      on i.num = p.num
           inner join item_state s
                      on i.num = s.num
           inner join item_detail d
                      on i.num = d.num
    order by s.sales_qty desc, i.like_cnt desc, i.review_cnt desc;
  </select>

  <select id="selectItemDetailInfoOnAdmin" parameterType="string" resultType="ItemRegisterInfo">
    select
      i.num as num,
      i.name as name,
      i.price as price,
      i.disc_price as disc_pirce,
      d.mfg_name as mfg_name,
      s.sales_qty as sales_qty,
      i.main_img as main_img,
      i.item_type as item_type,
      i.review_cnt as review_cnt,
      i.like_cnt as like_cnt,
      i.review_rate as review_rate,
      i.cust_type as cust_type,
      p.disc_rate as disc_rate,
      p.start_date as start_date,
      p.end_date as end_date,
      d.comt as remark,
      d.detail_img as detail_img,
      d.rel_date as rel_date,
      d.gr_date as gr_date,
      d.mfg_corp as mfg_corp,
      d.mfg_date as mfg_date,
      s.view_cnt as view_cnt,
      d.model as model,
      s.stock_qty as stock_aty,
      d.origin as origin,
      s.state_code as state_code,
      d.matr as maftr,
      d.comt as comt
    from item i
           inner join item_price p
                      on i.num = p.num
           inner join item_state s
                      on i.num = s.num
           inner join item_detail d
                      on i.num = d.num
    where i.num = #{num}
  </select>

  <update id="increaseStockQty" parameterType="map">
    update item_state
    set stock_qty = stock_qty + #{qty}
    where num = #{num};
  </update>








<!--베스트 페이지 url에서 gender, sort 값 매개변수로 받아옴, 각 정렬기준별 top 50개의 상품 select-->
  <select id="selectBest50" resultType="ItemDto" parameterType="map">
    SELECT a.*
    FROM item a
    <if test="sort == 1 or sort == 5 or sort == 7">
      JOIN item_state b ON a.num = b.num
    </if>
    <where>
      <if test="gender == 1">
        a.cust_type = '여성용'
      </if>
      <if test="gender == 2">
        a.cust_type = '남성용'
      </if>
      <if test="gender == 3">
        a.cust_type = '혼성'
      </if>
    </where>
    ORDER BY
    <choose>
      <when test="sort == 1">
        b.reg_date DESC
      </when>
      <when test="sort == 2">
        a.name ASC
      </when>
      <when test="sort == 3">
        a.disc_price ASC
      </when>
      <when test="sort == 4">
        a.disc_price DESC
      </when>
      <when test="sort == 5">
        b.sales_qty DESC
      </when>
      <when test="sort == 6">
        a.review_cnt DESC
      </when>
      <when test="sort == 7">
        b.view_cnt DESC
      </when>
      <when test="sort == 8">
        a.like_cnt DESC
      </when>
      <otherwise>
        b.reg_date DESC
      </otherwise>
    </choose>
    LIMIT 50
  </select>



</mapper>